!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AR	src/Makefile	/^AR	= ar$/;"	m
ARFLAGS	src/Makefile	/^ARFLAGS = rcs$/;"	m
AS	src/Makefile	/^AS	= as$/;"	m
AS	test/Makefile	/^AS	= as$/;"	m
ASFLAGS	src/Makefile	/^ASFLAGS	= -mcpu=arm920t -mapcs-32$/;"	m
ASFLAGS	test/Makefile	/^ASFLAGS	= -mcpu=arm920t -mapcs-32$/;"	m
BE_MASK	include/ts7200.h	47;"	d
BRDH_MASK	include/ts7200.h	57;"	d
BRDL_MASK	include/ts7200.h	59;"	d
BRK_MASK	include/ts7200.h	50;"	d
BUFFER_SIZE	include/buffers.h	5;"	d
BYTE_1_RECEIVED	src/terminal.c	/^{IDLE, QUERY_SENT, BYTE_1_RECEIVED, COMPLETE};$/;"	e	enum:QUERY_STATE	file:
CFLAGS	src/Makefile	/^CFLAGS  =  -ffreestanding -nodefaultlibs -nostdlib -c -fPIC -Wall -I. -I..\/include -mcpu=arm920t -msoft-float$/;"	m
CFLAGS	test/Makefile	/^CFLAGS  = -ffreestanding -nostdlib -nodefaultlibs -c -fPIC -Wall -I. -I..\/include -mcpu=arm920t -msoft-float$/;"	m
CLKSEL_MASK	include/ts7200.h	22;"	d
CLR_OFFSET	include/ts7200.h	23;"	d
COM1	include/bwio.h	17;"	d
COM1	include/polio.h	16;"	d
COM1	include/ts7200.h	32;"	d
COM2	include/bwio.h	18;"	d
COM2	include/polio.h	17;"	d
COM2	include/ts7200.h	33;"	d
COMPLETE	src/terminal.c	/^{IDLE, QUERY_SENT, BYTE_1_RECEIVED, COMPLETE};$/;"	e	enum:QUERY_STATE	file:
CRTL_OFFSET	include/ts7200.h	19;"	d
CTS_MASK	include/ts7200.h	68;"	d
CYCLES_PER_DECISECOND	include/timer.h	5;"	d
DATA_MASK	include/ts7200.h	43;"	d
DCD_MASK	include/ts7200.h	69;"	d
DEADBEEF	include/ts7200.h	92;"	d
DSR_MASK	include/ts7200.h	70;"	d
ENABLE_MASK	include/ts7200.h	20;"	d
EPS_MASK	include/ts7200.h	52;"	d
FEN_MASK	include/ts7200.h	54;"	d
FE_MASK	include/ts7200.h	45;"	d
IDLE	src/terminal.c	/^{IDLE, QUERY_SENT, BYTE_1_RECEIVED, COMPLETE};$/;"	e	enum:QUERY_STATE	file:
IRDA_BASE	include/ts7200.h	35;"	d
LBEN_MASK	include/ts7200.h	66;"	d
LD	test/Makefile	/^LD      = ld$/;"	m
LDFLAGS	test/Makefile	/^LDFLAGS =  -nostartfiles -nostdlib -nodefaultlibs -init main -N  -T orex.ld -L\/u\/wbcowan\/gnuarm-4.0.2\/lib\/gcc\/arm-elf\/4.0.2 -L..\/lib$/;"	m
LDR_OFFSET	include/ts7200.h	17;"	d
LED_ADDRESS	include/ts7200.h	26;"	d
LED_BOTH	include/ts7200.h	30;"	d
LED_GREEN	include/ts7200.h	28;"	d
LED_NONE	include/ts7200.h	27;"	d
LED_RED	include/ts7200.h	29;"	d
MODE_MASK	include/ts7200.h	21;"	d
MOD_A	src/terminal.c	/^enum SENSOR_MODULE {MOD_A, MOD_B, MOD_C, MOD_D, MOD_E};$/;"	e	enum:SENSOR_MODULE	file:
MOD_B	src/terminal.c	/^enum SENSOR_MODULE {MOD_A, MOD_B, MOD_C, MOD_D, MOD_E};$/;"	e	enum:SENSOR_MODULE	file:
MOD_C	src/terminal.c	/^enum SENSOR_MODULE {MOD_A, MOD_B, MOD_C, MOD_D, MOD_E};$/;"	e	enum:SENSOR_MODULE	file:
MOD_D	src/terminal.c	/^enum SENSOR_MODULE {MOD_A, MOD_B, MOD_C, MOD_D, MOD_E};$/;"	e	enum:SENSOR_MODULE	file:
MOD_E	src/terminal.c	/^enum SENSOR_MODULE {MOD_A, MOD_B, MOD_C, MOD_D, MOD_E};$/;"	e	enum:SENSOR_MODULE	file:
MSIEN_MASK	include/ts7200.h	62;"	d
OE_MASK	include/ts7200.h	48;"	d
OFF	include/bwio.h	21;"	d
OFF	include/polio.h	20;"	d
ON	include/bwio.h	20;"	d
ON	include/polio.h	19;"	d
PEN_MASK	include/ts7200.h	51;"	d
PE_MASK	include/ts7200.h	46;"	d
QUERY_SENT	src/terminal.c	/^{IDLE, QUERY_SENT, BYTE_1_RECEIVED, COMPLETE};$/;"	e	enum:QUERY_STATE	file:
QUERY_STATE	src/terminal.c	/^enum QUERY_STATE$/;"	g	file:
RIEN_MASK	include/ts7200.h	63;"	d
RTIEN_MASK	include/ts7200.h	65;"	d
RXFE_MASK	include/ts7200.h	72;"	d
RXFF_MASK	include/ts7200.h	74;"	d
SENSOR_MODULE	src/terminal.c	/^enum SENSOR_MODULE {MOD_A, MOD_B, MOD_C, MOD_D, MOD_E};$/;"	g	file:
STP2_MASK	include/ts7200.h	53;"	d
TIEN_MASK	include/ts7200.h	64;"	d
TIMER1_BASE	include/ts7200.h	8;"	d
TIMER2_BASE	include/ts7200.h	9;"	d
TIMER3_BASE	include/ts7200.h	10;"	d
TIMER3_CONTROL	include/ts7200.h	15;"	d
TIMER3_LOAD	include/ts7200.h	14;"	d
TIMER3_VALUE	include/ts7200.h	13;"	d
TXBUSY_MASK	include/ts7200.h	71;"	d
TXFE_MASK	include/ts7200.h	75;"	d
TXFF_MASK	include/ts7200.h	73;"	d
UART1_BASE	include/ts7200.h	36;"	d
UART2_BASE	include/ts7200.h	37;"	d
UARTEN_MASK	include/ts7200.h	61;"	d
UART_CLK_FREQ	src/bwio.c	12;"	d	file:
UART_CTLR_OFFSET	include/ts7200.h	60;"	d
UART_DATA_OFFSET	include/ts7200.h	42;"	d
UART_DMAR_OFFSET	include/ts7200.h	77;"	d
UART_FLAG_OFFSET	include/ts7200.h	67;"	d
UART_HDLCAMV_OFFSET	include/ts7200.h	84;"	d
UART_HDLCAM_OFFSET	include/ts7200.h	85;"	d
UART_HDLCCTL_OFFSET	include/ts7200.h	83;"	d
UART_HDLCRIB_OFFSET	include/ts7200.h	86;"	d
UART_HDLCSTS_OFFSET	include/ts7200.h	87;"	d
UART_INTR_OFFSET	include/ts7200.h	76;"	d
UART_LCRH_OFFSET	include/ts7200.h	49;"	d
UART_LCRL_OFFSET	include/ts7200.h	58;"	d
UART_LCRM_OFFSET	include/ts7200.h	56;"	d
UART_MDMCTL_OFFSET	include/ts7200.h	81;"	d
UART_MDMSTS_OFFSET	include/ts7200.h	82;"	d
UART_RSR_OFFSET	include/ts7200.h	44;"	d
VAL_OFFSET	include/ts7200.h	18;"	d
WLEN_MASK	include/ts7200.h	55;"	d
XCC	src/Makefile	/^XCC     = gcc$/;"	m
XCC	test/Makefile	/^XCC     = gcc$/;"	m
__BUFFERS_H__	include/buffers.h	2;"	d
__CURSOR_ADDRESSING_H__	include/cursor-addressing.h	2;"	d
__PANIC_H__	include/panic.h	2;"	d
__PARSE_INSTRUCTION_H__	include/parse_instruction.h	2;"	d
__POLIO_H__	include/polio.h	2;"	d
__TERMINAL_H__	include/terminal.h	2;"	d
__TIMER_H__	include/timer.h	2;"	d
__TIME_H__	include/time.h	2;"	d
__va_argsiz	include/bwio.h	7;"	d
__va_argsiz	include/polio.h	6;"	d
a2d	src/polio.c	/^int a2d( char ch ) {$/;"	f
a2d	src/polio.s	/^a2d:$/;"	l
a2i	src/polio.c	/^char a2i( char ch, char **src, int base, int *nump ) {$/;"	f
a2i	src/polio.s	/^a2i:$/;"	l
buf	include/buffers.h	/^	char buf[BUFFER_SIZE];$/;"	m	struct:__anon2
buffer	include/buffers.h	/^} buffer;$/;"	t	typeref:struct:__anon2
buffer_init	src/buffers.c	/^void buffer_init(void)$/;"	f
buffer_init	src/buffers.s	/^buffer_init:$/;"	l
buffer_peek	src/buffers.c	/^int buffer_peek(buffer *b, char *c)$/;"	f
buffer_peek	src/buffers.s	/^buffer_peek:$/;"	l
buffer_take	src/buffers.c	/^int buffer_take(buffer *b, char *c)$/;"	f
buffer_take	src/buffers.s	/^buffer_take:$/;"	l
bwa2d	src/bwio.c	/^int bwa2d( char ch ) {$/;"	f
bwa2d	src/bwio.s	/^bwa2d:$/;"	l
bwa2i	src/bwio.c	/^char bwa2i( char ch, char **src, int base, int *nump ) {$/;"	f
bwa2i	src/bwio.s	/^bwa2i:$/;"	l
bwformat	src/bwio.c	/^void bwformat ( int channel, char *fmt, va_list va ) {$/;"	f
bwformat	src/bwio.s	/^bwformat:$/;"	l
bwgetc	src/bwio.c	/^int bwgetc( int channel ) {$/;"	f
bwgetc	src/bwio.s	/^bwgetc:$/;"	l
bwi2a	src/bwio.c	/^void bwi2a( int num, char *bf ) {$/;"	f
bwi2a	src/bwio.s	/^bwi2a:$/;"	l
bwprintf	src/bwio.c	/^void bwprintf( int channel, char *fmt, ... ) {$/;"	f
bwprintf	src/bwio.s	/^bwprintf:$/;"	l
bwputc	src/bwio.c	/^int bwputc( int channel, char c ) {$/;"	f
bwputc	src/bwio.s	/^bwputc:$/;"	l
bwputr	src/bwio.c	/^int bwputr( int channel, unsigned int reg ) {$/;"	f
bwputr	src/bwio.s	/^bwputr:$/;"	l
bwputstr	src/bwio.c	/^int bwputstr( int channel, char *str ) {$/;"	f
bwputstr	src/bwio.s	/^bwputstr:$/;"	l
bwputw	src/bwio.c	/^void bwputw( int channel, int n, char fc, char *bf ) {$/;"	f
bwputw	src/bwio.s	/^bwputw:$/;"	l
bwputx	src/bwio.c	/^int bwputx( int channel, char c ) {$/;"	f
bwputx	src/bwio.s	/^bwputx:$/;"	l
bwsetfifo	src/bwio.c	/^int bwsetfifo( int channel, int state ) {$/;"	f
bwsetfifo	src/bwio.s	/^bwsetfifo:$/;"	l
bwsetspeed	src/bwio.c	/^int bwsetspeed( int channel, int speed ) {$/;"	f
bwsetspeed	src/bwio.s	/^bwsetspeed:$/;"	l
bwui2a	src/bwio.c	/^void bwui2a( unsigned int num, unsigned int base, char *bf ) {$/;"	f
bwui2a	src/bwio.s	/^bwui2a:$/;"	l
c2x	src/bwio.c	/^char c2x( char ch ) {$/;"	f
c2x	src/bwio.s	/^c2x:$/;"	l
c2x	src/polio.c	/^char c2x( char ch ) {$/;"	f
c2x	src/polio.s	/^c2x:$/;"	l
char_to_write	src/terminal.c	/^char char_to_write;$/;"	v
chars_to_write	src/polio.c	/^int chars_to_write = 0;$/;"	v
chars_to_write	src/polio.s	/^chars_to_write:$/;"	l
check_if_sensor_on_screen	src/terminal.c	/^int check_if_sensor_on_screen(char module, char number)$/;"	f
check_if_sensor_on_screen	src/terminal.s	/^check_if_sensor_on_screen:$/;"	l
cls	include/cursor-addressing.h	12;"	d
command_buffer	src/buffers.c	/^buffer command_buffer;$/;"	v
cts	src/polio.c	/^int cts(int channel)$/;"	f
cts	src/polio.s	/^cts:$/;"	l
debug_print	src/terminal.c	/^void debug_print(char *str)$/;"	f
debug_print	src/terminal.s	/^debug_print:$/;"	l
debug_print_line	src/terminal.c	/^static int debug_print_line = 50;$/;"	v	file:
debug_print_line	src/terminal.s	/^debug_print_line:$/;"	l
deciseconds	include/time.h	/^typedef struct {unsigned int minutes; unsigned int seconds ; unsigned int deciseconds; unsigned int prev;} time_struct;$/;"	m	struct:__anon1
empty	include/buffers.h	/^	int empty;$/;"	m	struct:__anon2
esc	include/cursor-addressing.h	10;"	d
execute	src/terminal.c	/^int execute;$/;"	v
execute_command	src/terminal.c	/^int execute_command(void)$/;"	f
execute_command	src/terminal.s	/^execute_command:$/;"	l
format	src/polio.c	/^void format ( int channel, char *fmt, va_list va ) {$/;"	f
format	src/polio.s	/^format:$/;"	l
get_char_from_keyboard	src/terminal.c	/^int get_char_from_keyboard(void)$/;"	f
get_char_from_keyboard	src/terminal.s	/^get_char_from_keyboard:$/;"	l
get_curtime	src/time.c	/^time_struct get_curtime(time_struct prev)$/;"	f
get_curtime	src/time.s	/^get_curtime:$/;"	l
get_time	src/timer.c	/^unsigned int get_time(void)$/;"	f
get_time	src/timer.s	/^get_time:$/;"	l
getch	src/polio.c	/^int getch(int channel, char *got)$/;"	f
getch	src/polio.s	/^getch:$/;"	l
got_command	src/terminal.c	/^int got_command;$/;"	v
hide_cursor	include/cursor-addressing.h	17;"	d
i2a	src/polio.c	/^void i2a( int num, char *bf ) {$/;"	f
i2a	src/polio.s	/^i2a:$/;"	l
init_terminal	src/terminal.c	/^void init_terminal()$/;"	f
init_terminal	src/terminal.s	/^init_terminal:$/;"	l
keyboard_buffer	src/buffers.c	/^buffer keyboard_buffer;$/;"	v
line	src/terminal.c	/^static int line = 0;$/;"	v	file:
line	src/terminal.s	/^line:$/;"	l
linepos	src/terminal.c	/^int linepos;$/;"	v
main	test/buffertests.c	/^int main(void)$/;"	f
main	test/buffertests.s	/^main:$/;"	l
main	test/cursor-addressing-test.c	/^int main()$/;"	f
main	test/cursor-addressing-test.s	/^main:$/;"	l
main	test/iotest.c	/^int main( int argc, char* argv[] ) {$/;"	f
main	test/iotest.s	/^main:$/;"	l
main	test/polltest.c	/^int main()$/;"	f
main	test/polltest.s	/^main:$/;"	l
main	test/terminaltest.c	/^int main(void)$/;"	f
main	test/timertest.c	/^int main(void)$/;"	f
main	test/timertest.s	/^main:$/;"	l
main	test/traintest.c	/^int main(void)$/;"	f
main	test/traintest.s	/^main:$/;"	l
minutes	include/time.h	/^typedef struct {unsigned int minutes; unsigned int seconds ; unsigned int deciseconds; unsigned int prev;} time_struct;$/;"	m	struct:__anon1
module_being_queried	src/terminal.c	/^static enum SENSOR_MODULE module_being_queried = MOD_A;$/;"	v	typeref:enum:SENSOR_MODULE	file:
module_being_queried	src/terminal.s	/^module_being_queried:$/;"	l
panic	src/panic.c	/^int panic = 0;$/;"	v
panic	src/panic.s	/^panic:$/;"	l
parse_command	src/terminal.c	/^int parse_command(void)$/;"	f
parse_command	src/terminal.s	/^parse_command:$/;"	l
parse_instruction	src/parse_instruction.c	/^int parse_instruction(char* instruction, char* ret)$/;"	f
parse_instruction	src/parse_instruction.s	/^parse_instruction:$/;"	l
polprintf	src/polio.c	/^void polprintf( int channel, char *fmt, ... ) {$/;"	f
polprintf	src/polio.s	/^polprintf:$/;"	l
pos	include/buffers.h	/^	int pos;$/;"	m	struct:__anon2
pos	include/cursor-addressing.h	14;"	d
pretty_print_switch_stuff	test/buffertests.c	/^static void pretty_print_switch_stuff(void)$/;"	f	file:
pretty_print_switch_stuff	test/buffertests.s	/^pretty_print_switch_stuff:$/;"	l
prev	include/time.h	/^typedef struct {unsigned int minutes; unsigned int seconds ; unsigned int deciseconds; unsigned int prev;} time_struct;$/;"	m	struct:__anon1
print_query_response	src/terminal.c	/^void print_query_response(char response[])$/;"	f
print_query_response	src/terminal.s	/^print_query_response:$/;"	l
print_switch_states	test/buffertests.c	/^static void print_switch_states(void)$/;"	f	file:
print_switch_states	test/buffertests.s	/^print_switch_states:$/;"	l
put_on_buffer	src/buffers.c	/^int put_on_buffer(buffer *b, char c)$/;"	f
put_on_buffer	src/buffers.s	/^put_on_buffer:$/;"	l
putch	src/polio.c	/^int putch(int channel, char send)$/;"	f
putch	src/polio.s	/^putch:$/;"	l
putr	src/polio.c	/^int putr( int channel, unsigned int reg ) {$/;"	f
putr	src/polio.s	/^putr:$/;"	l
putstr	src/polio.c	/^int putstr( int channel, char *str ) {$/;"	f
putstr	src/polio.s	/^putstr:$/;"	l
putw	src/polio.c	/^void putw( int channel, int n, char fc, char *bf ) {$/;"	f
putw	src/polio.s	/^putw:$/;"	l
putx	src/polio.c	/^int putx( int channel, char c ) {$/;"	f
putx	src/polio.s	/^putx:$/;"	l
q	test/buffertests.c	/^int q;$/;"	v
query_response	src/terminal.c	/^static char query_response[2];$/;"	v	file:
query_response	src/terminal.s	/^query_response:$/;"	l
query_sensor	src/terminal.c	/^int query_sensor()$/;"	f
query_sensor	src/terminal.s	/^query_sensor:$/;"	l
screen_buffer	src/buffers.c	/^buffer screen_buffer;$/;"	v
seconds	include/time.h	/^typedef struct {unsigned int minutes; unsigned int seconds ; unsigned int deciseconds; unsigned int prev;} time_struct;$/;"	m	struct:__anon1
send_char_to_screen	src/terminal.c	/^int send_char_to_screen(void)$/;"	f
send_char_to_screen	src/terminal.s	/^send_char_to_screen:$/;"	l
sensor_query_state	src/terminal.c	/^static enum QUERY_STATE sensor_query_state = IDLE;$/;"	v	typeref:enum:QUERY_STATE	file:
sensor_query_state	src/terminal.s	/^sensor_query_state:$/;"	l
sensor_state_position	test/buffertests.c	/^static int sensor_state_position = 0;$/;"	v	file:
sensor_state_position	test/buffertests.s	/^sensor_state_position:$/;"	l
sensor_states	test/buffertests.c	/^char sensor_states[88];$/;"	v
sensor_states_changed	test/buffertests.c	/^char sensor_states_changed = 0;$/;"	v
sensor_states_changed	test/buffertests.s	/^sensor_states_changed:$/;"	l
sensors_on_screen	src/terminal.c	/^static char sensors_on_screen[32];$/;"	v	file:
sensors_on_screen	src/terminal.s	/^sensors_on_screen:$/;"	l
set_all_switches_to_straight	test/buffertests.c	/^static void set_all_switches_to_straight(void)$/;"	f	file:
set_all_switches_to_straight	test/buffertests.s	/^set_all_switches_to_straight:$/;"	l
set_led	src/bwio.c	/^void set_led(int status)$/;"	f
set_led	src/bwio.s	/^set_led:$/;"	l
set_led	src/led.c	/^void set_led(int status)$/;"	f
set_timer	src/timer.c	/^void set_timer(unsigned int init)$/;"	f
set_timer	src/timer.s	/^set_timer:$/;"	l
setfifo	src/polio.c	/^int setfifo( int channel, int state ) {$/;"	f
setfifo	src/polio.s	/^setfifo:$/;"	l
setspeed	src/polio.c	/^int setspeed( int channel, int speed ) {$/;"	f
setspeed	src/polio.s	/^setspeed:$/;"	l
string_to_int	src/parse_instruction.c	/^static int string_to_int(char* str)$/;"	f	file:
string_to_int	src/parse_instruction.s	/^string_to_int:$/;"	l
switch_states	test/buffertests.c	/^char switch_states[23];$/;"	v
switch_states_changed	test/buffertests.c	/^char switch_states_changed = 0;$/;"	v
switch_states_changed	test/buffertests.s	/^switch_states_changed:$/;"	l
time_struct	include/time.h	/^typedef struct {unsigned int minutes; unsigned int seconds ; unsigned int deciseconds; unsigned int prev;} time_struct;$/;"	t	typeref:struct:__anon1
train_buffer	src/buffers.c	/^buffer train_buffer;$/;"	v
uart_init	src/polio.c	/^int uart_init()$/;"	f
uart_init	src/polio.s	/^uart_init:$/;"	l
ui2a	src/polio.c	/^void ui2a( unsigned int num, unsigned int base, char *bf ) {$/;"	f
ui2a	src/polio.s	/^ui2a:$/;"	l
va_arg	include/bwio.h	14;"	d
va_arg	include/polio.h	13;"	d
va_end	include/bwio.h	12;"	d
va_end	include/polio.h	11;"	d
va_list	include/bwio.h	/^typedef char *va_list;$/;"	t
va_list	include/polio.h	/^typedef char *va_list;$/;"	t
va_start	include/bwio.h	10;"	d
va_start	include/polio.h	9;"	d
write	src/terminal.c	/^int write;$/;"	v
